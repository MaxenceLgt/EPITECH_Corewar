name: Corewar
on:
  push:
    branches-ignore:
      - 'ga-ignore-*'
  pull_request:
    branches-ingore:
      - 'ga-ignore-*'

env:
  EXECUTABLES: "asm/asm, corewar/corewar"

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - uses: actions/checkout@v3
      - name: Run coding style
      - run: check.sh $(pwd) $(pwd)
      - name: Check coding style errors
      - run: |
          FILENAME=coding-style-reports.log
          if [ ! -s "${FILENAME}" ]; then
            echo ""
          else
            while IFS=$'\n'; read line
            do
              TEMP=$(echo $line)
              FILE=$(echo $TEMP | cut -d : -f 1)
              LINE=$(echo $TEMP | cut -d : -f 2)
              TITLE=$(echo $TEMP | cut -d : -f 3)
              TITLE="$TITLE coding style error"
              ELEMENT=$(echo $TEMP | cut -d : -f 4)
              echo "::error file=$FILE,line=$LINE,title=$TITLE::$ELEMENT"
            done < "${FILENAME}"
            exit 1
          fi

  check_program_compilation:
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    needs: check_coding_style
    steps:
      - uses: actions/checkout@v3
      - name: Run Makefile
      - run: make
        timeout-minutes: 2
      - run: make clean
      - name: Check executable names
      - run: |
          IFS=',' read -r -a array <<< "${{ env.EXECUTABLE }}"
          for element in "${array[@]}"
          do
            echo $line
            if [[ -f $line && -x $line ]]; then
              continue
            else
              exit 1
            fi
          done
